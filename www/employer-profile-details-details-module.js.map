{"version":3,"sources":["webpack:///./src/app/employer/profile/details/details.module.ts","webpack:///./src/app/employer/profile/details/details.page.html","webpack:///./src/app/employer/profile/details/details.page.scss","webpack:///./src/app/employer/profile/details/details.page.ts"],"names":[],"mappings":"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","file":"employer-profile-details-details-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DetailsPage } from './details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DetailsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [DetailsPage]\n})\nexport class DetailsPageModule {}\n","module.exports = \"<ion-content>\\n  <div class=\\\"main\\\">\\n    <div class=\\\"header container\\\">\\n      <ion-back-button text=\\\"\\\" defaultHref=\\\"\\\" icon=\\\"arrow-round-back\\\"></ion-back-button>\\n    </div>\\n\\n    <div class=\\\"content\\\">\\n      <div class=\\\"title container\\\">\\n        <h2>Daten ändern</h2>\\n        <div class=\\\"text-danger\\\">\\n          <span *ngIf=\\\"f.vorname.errors || vorname.value == '' \\\" >vorname is empty</span>\\n          <span *ngIf=\\\"f.nachname.errors || nachname.value == ''; \\\">nachname is empty</span>\\n          <span *ngIf=\\\"f.telephone.errors || telephone.value == ''; \\\">telephone is empty</span>\\n          <span *ngIf=\\\"f.CompanyName.errors || CompanyName.value == ''; \\\">Name der Orga is empty</span>\\n          <!-- <span *ngIf=\\\"f.role.errors || role.value == ''; \\\"> Ihre Rolle in der Organisation is empty</span>       -->\\n          <span *ngIf=\\\"f.address.errors || address.value == ''; \\\">Address field is empty</span>\\n\\n        </div>\\n      </div>\\n      <div class=\\\"general\\\">\\n        <form [formGroup]=\\\"form\\\">\\n          <ion-list>\\n            <div class=\\\"grid-2\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label position=\\\"stacked\\\">Vorname</ion-label>\\n                <ion-input type=\\\"text\\\" [ngModel]=\\\"userData.vorname\\\" #vorname formControlName=\\\"vorname\\\" clearInput\\n                  autocapitalize=\\\"word\\\" autocomplete autocorrect> </ion-input>\\n              </ion-item>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label position=\\\"stacked\\\">Nachname</ion-label>\\n                <ion-input type=\\\"text\\\" [ngModel]=\\\"userData.nachname\\\" #nachname formControlName=\\\"nachname\\\"  clearInput\\n                  autocapitalize=\\\"word\\\" autocomplete autocorrect> </ion-input>\\n              </ion-item>\\n            </div>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label position=\\\"stacked\\\">Telefonnummer</ion-label>\\n              <ion-input type=\\\"number\\\" formControlName=\\\"telephone\\\" #telephone [ngModel]=\\\"userData.telephone\\\" clearInput\\n                autocapitalize=\\\"word\\\" autocomplete autocorrect></ion-input>\\n            </ion-item>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label position=\\\"stacked\\\"> Name der Orga</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"CompanyName\\\" #CompanyName [ngModel]=\\\"userData.CompanyName\\\"\\n                clearInput autocapitalize=\\\"word\\\" autocomplete autocorrect></ion-input>\\n            </ion-item>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label position=\\\"stacked\\\">Adresse</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"address\\\" #address [ngModel]=\\\"userData.address\\\" clearInput\\n                autocapitalize=\\\"word\\\" autocomplete autocorrect></ion-input>\\n            </ion-item>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label position=\\\"stacked\\\">Ihre Rolle in der Organisation</ion-label>\\n\\n              <ion-select formControlName=\\\"role\\\" [ngModel]=\\\"userData.role\\\" cancelText=\\\"Abbrechen\\\" okText=\\\"Fertig\\\">\\n                <ion-select-option>Geschäftsinhaber</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label position=\\\"stacked\\\">E-Mail</ion-label>\\n              <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" [ngModel]=\\\"userData.email\\\" clearInput >\\n              </ion-input>\\n            </ion-item>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label position=\\\"stacked\\\">Passwort</ion-label>\\n              <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" [ngModel]=\\\"userData.password\\\" clearInput >\\n              </ion-input>\\n            </ion-item>\\n          </ion-list>\\n\\n          <div class=\\\"divider\\\"></div>\\n\\n          <div class=\\\"container\\\">\\n            <ion-button color=\\\"primary\\\" expand=\\\"block\\\" [disabled]=\\\"!form.valid || form.pristine\\\" (click)=\\\"update(form)\\\">Aktualisieren</ion-button>\\n          </div>\\n\\n        </form>\\n      </div>\\n\\n    </div>\\n  </div>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVyL3Byb2ZpbGUvZGV0YWlscy9kZXRhaWxzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ToastController, NavController } from '@ionic/angular';\nimport { ApiService } from 'src/app/services/api.service';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { HelperService } from 'src/app/services/helper.service';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.page.html',\n  styleUrls: ['./details.page.scss'],\n})\nexport class DetailsPage implements OnInit {\n\n  form: FormGroup;\n  userData: any;\n\n\n\n  constructor(public toastController: ToastController, private navController: NavController, private api: ApiService, private fb: FormBuilder, private helper: HelperService) { }\n\n  ngOnInit() {\n    this.api.getUser(localStorage.getItem('uid')).subscribe(res => {\n      this.userData = res;\n      // console.log(this.userData);\n      this.api.getEmployerData(localStorage.getItem('uid')).subscribe(res => {\n        this.userData = { ...this.userData, ...res };\n        // console.log(this.userData);\n      }, err => {\n        // console.log(err.message);\n      });\n    });\n\n    this.form = this.fb.group({\n      vorname: ['', Validators.required],\n      nachname: ['', Validators.required],\n      telephone: ['', Validators.required],\n      CompanyName: ['', Validators.required],\n      address: ['', Validators.required],\n      role: [''],\n      email: [{ value: '', disabled: true }, Validators.required],\n      password: [{ value: '', disabled: true }, Validators.compose([\n        Validators.required\n      ])],\n    });\n\n    /* \n      name: [{ value: '', disabled: true }, Validators.required],\n      name: [{ value: '', disabled: this.variable }, Validators.required]\n      this.form.controls['name'].disable();\n   */\n\n  }\n  // end ngOnInit\n\n  update(data) {\n\n    let formData = {\n      vorname: data.value.vorname,\n      nachname: data.value.nachname,\n      telephone: data.value.telephone,\n      CompanyName: data.value.CompanyName,\n      address: data.value.address,\n      role: data.value.role,\n      email: data.value.email,\n      password: data.value.password\n    }\n    // console.log(formData);\n    this.api.updateEmployerData(localStorage.getItem('uid'), {\n      vorname: formData.vorname,\n      nachname: formData.nachname,\n      telephone: formData.telephone,\n      CompanyName: formData.CompanyName,\n      address: formData.address,\n      role: formData.role,\n    }).then(() => {\n      this.helper.presentToast('Erfolgreich aktualisiert.');\n      this.navController.navigateBack(\"/employer/profile\");\n\n    }, err => {\n      this.helper.presentToast(err.message);\n    })\n\n\n\n\n\n    // this.updated();\n\n  }\n  // async updated() {\n  //   const toast = await this.toastController.create({\n  //     message: 'Erfolgreich aktualisiert.',\n  //     position: 'top',\n  //     duration: 1000\n  //   });\n  //   toast.present();\n  //   this.navController.navigateBack(\"/employer/profile\");\n  // }\n\n  get f() {\n    return this.form.controls;\n  }\n\n\n}\n"],"sourceRoot":""}