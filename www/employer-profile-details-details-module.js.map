{"version":3,"sources":["webpack:///./src/app/employer/profile/details/details.module.ts","webpack:///./src/app/employer/profile/details/details.page.html","webpack:///./src/app/employer/profile/details/details.page.scss","webpack:///./src/app/employer/profile/details/details.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AACV;AAGA;AAE7C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAYF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAV7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;AC1B9B,ygBAAygB,oGAAoG,yGAAyG,oGAAoG,2GAA2G,wwDAAwwD,iBAAiB,4dAA4d,QAAQ,syC;;;;;;;;;;;ACAlqG,+DAA+D,+J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACc;AACN;AACU;AACJ;AACI;AAOpE;IASE,4CAA4C;IAC5C,qBAAmB,eAAgC,EAAU,aAA4B,EAAU,GAAe,EAAU,EAAe,EAAU,MAAqB,EAAU,QAAyB;QAA1L,oBAAe,GAAf,eAAe,CAAiB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,QAAG,GAAH,GAAG,CAAY;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,WAAM,GAAN,MAAM,CAAe;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAN7M,mBAAc,GAAG,IAAI,CAAC;QAOpB,IAAI,CAAC,QAAQ,CAAC,wBAAwB,GAAG,EAAE,CAAC;QAC5C,IAAI,CAAC,QAAQ,CAAC,mBAAmB,GAAG;YAClC,KAAK,EAAE,EAAE;SACV,CAAC;QACF,sEAAsE;IAExE,CAAC;IAED,8BAAQ,GAAR;QAAA,iBA8DC;QA7DC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,sCAAsC;YACtC,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3D,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;oBAC3D,yDAAU,CAAC,QAAQ;iBACpB,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,aAAG;YAEzD,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,8BAA8B;YAC9B,KAAI,CAAC,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;gBAClE,KAAI,CAAC,QAAQ,gBAAQ,KAAI,CAAC,QAAQ,EAAK,IAAI,CAAE,CAAC;gBAE9C,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;gBACxC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;gBAEhD,KAAI,CAAC,QAAQ,CAAC,mBAAmB,GAAG;oBAClC,KAAK,EAAE,KAAI,CAAC,UAAU;iBACvB,CAAC;gBACF,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,KAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;gBAEnE,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC;oBACnB,SAAS,EAAE,KAAI,CAAC,QAAQ,CAAC,OAAO;oBAChC,UAAU,EAAE,KAAI,CAAC,QAAQ,CAAC,QAAQ;oBAClC,WAAW,EAAE,KAAI,CAAC,QAAQ,CAAC,SAAS;oBACpC,aAAa,EAAE,KAAI,CAAC,QAAQ,CAAC,WAAW;oBACxC,yDAAyD;oBACzD,MAAM,EAAE,KAAI,CAAC,QAAQ,CAAC,IAAI;oBAC1B,OAAO,EAAE,KAAI,CAAC,QAAQ,CAAC,KAAK;oBAC5B,UAAU,EAAE,KAAI,CAAC,QAAQ,CAAC,QAAQ;iBACnC,CAAC,CAAC;gBACH,sEAAsE;gBAEtE,4DAA4D;gBAC5D,8DAA8D;gBAC9D,gEAAgE;gBAChE,oEAAoE;gBACpE,4DAA4D;gBAC5D,sDAAsD;gBACtD,wDAAwD;gBACxD,8DAA8D;gBAE9D,8BAA8B;YAChC,CAAC,EAAE,aAAG;gBACJ,4BAA4B;YAC9B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH;;;;SAIC;IAEH,CAAC;IACD,eAAe;IAEf,4BAAM,GAAN,UAAO,IAAI;QAAX,iBAoCC;QAnCC,IAAI,IAAI,CAAC,UAAU,KAAK,EAAE,EAAE;YAC1B,KAAK,CAAC,+BAA+B,CAAC,CAAC;SACxC;aAAM;YACL,IAAM,QAAQ,GAAG;gBACf,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;gBAC3B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;gBAC7B,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;gBAC/B,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW;gBACnC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;gBACrB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;gBACvB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;aAC9B,CAAC;YACF,yBAAyB;YACzB,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACvD,OAAO,EAAE,QAAQ,CAAC,OAAO;gBACzB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;gBAC3B,SAAS,EAAE,QAAQ,CAAC,SAAS;gBAC7B,WAAW,EAAE,QAAQ,CAAC,WAAW;gBACjC,OAAO,EAAE,IAAI,CAAC,UAAU;gBACxB,IAAI,EAAE,QAAQ,CAAC,IAAI;aACpB,CAAC,CAAC,IAAI,CAAC;gBACN,KAAI,CAAC,MAAM,CAAC,YAAY,CAAC,2BAA2B,CAAC,CAAC;gBACtD,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;YAEvD,CAAC,EAAE,aAAG;gBACJ,KAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;SACJ,CAAC,aAAa;QAMf,kBAAkB;IAEpB,CAAC;IAWD,sBAAI,0BAAC;QAVL,oBAAoB;QACpB,sDAAsD;QACtD,4CAA4C;QAC5C,uBAAuB;QACvB,qBAAqB;QACrB,QAAQ;QACR,qBAAqB;QACrB,0DAA0D;QAC1D,IAAI;aAEJ;YACE,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC5B,CAAC;;;OAAA;IAED,kCAAY,GAAZ;QACE,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;IACtC,CAAC;IAED,iCAAW,GAAX,UAAY,IAAI;QACd,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,KAAK,GAAG,IAAI,CAAC;QAC/C,gDAAgD;QAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAEzC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,gCAAU,GAAV;QACE,IAAI,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;IACH,CAAC;IAED,iCAAW,GAAX;QACE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAC9B,CAAC;IA7JU,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,gHAAkC;;SAEnC,CAAC;yCAWoC,8DAAe,EAAyB,4DAAa,EAAe,uEAAU,EAAc,0DAAW,EAAkB,6EAAa,EAAoB,iFAAe;OAVlM,WAAW,CAgKvB;IAAD,kBAAC;CAAA;AAhKuB","file":"employer-profile-details-details-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\n\r\nimport { DetailsPage } from './details.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DetailsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [DetailsPage]\r\n})\r\nexport class DetailsPageModule {}\r\n","module.exports = \"<ion-content>\\r\\n  <div class=\\\"main\\\">\\r\\n    <div class=\\\"header container\\\">\\r\\n      <ion-back-button text=\\\"\\\" defaultHref=\\\"\\\" icon=\\\"arrow-round-back\\\"></ion-back-button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"content\\\">\\r\\n      <div class=\\\"title container\\\">\\r\\n        <h2>Daten ändern</h2>\\r\\n        <div class=\\\"text-danger\\\">\\r\\n          <span *ngIf=\\\"f.vorname.errors || vorname.value == '' \\\">vorname is empty</span>\\r\\n          <span *ngIf=\\\"f.nachname.errors || nachname.value == ''; \\\">nachname is empty</span>\\r\\n          <span *ngIf=\\\"f.telephone.errors || telephone.value == ''; \\\">telephone is empty</span>\\r\\n          <span *ngIf=\\\"f.CompanyName.errors || CompanyName.value == ''; \\\">Name der Orga is empty</span>\\r\\n          <!-- <span *ngIf=\\\"f.role.errors || role.value == ''; \\\"> Ihre Rolle in der Organisation is empty</span>       -->\\r\\n          <span *ngIf=\\\"query.value == ''; \\\">Address field is empty</span>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"general\\\">\\r\\n        <form [formGroup]=\\\"form\\\">\\r\\n          <ion-list>\\r\\n            <div class=\\\"grid-2\\\">\\r\\n              <ion-item lines=\\\"none\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Vorname</ion-label>\\r\\n                <ion-input type=\\\"text\\\" #vorname formControlName=\\\"vorname\\\" clearInput autocapitalize=\\\"word\\\" autocomplete\\r\\n                  autocorrect> </ion-input>\\r\\n              </ion-item>\\r\\n              <ion-item lines=\\\"none\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Nachname</ion-label>\\r\\n                <ion-input type=\\\"text\\\" #nachname formControlName=\\\"nachname\\\" clearInput autocapitalize=\\\"word\\\"\\r\\n                  autocomplete autocorrect> </ion-input>\\r\\n              </ion-item>\\r\\n            </div>\\r\\n            <ion-item lines=\\\"none\\\">\\r\\n              <ion-label position=\\\"stacked\\\">Telefonnummer</ion-label>\\r\\n              <ion-input type=\\\"number\\\" formControlName=\\\"telephone\\\" #telephone clearInput autocapitalize=\\\"word\\\"\\r\\n                autocomplete autocorrect></ion-input>\\r\\n            </ion-item>\\r\\n            <ion-item lines=\\\"none\\\">\\r\\n              <ion-label position=\\\"stacked\\\"> Name der Orga</ion-label>\\r\\n              <ion-input type=\\\"text\\\" formControlName=\\\"CompanyName\\\" #CompanyName clearInput autocapitalize=\\\"word\\\"\\r\\n                autocomplete autocorrect></ion-input>\\r\\n            </ion-item>\\r\\n            <ion-item lines=\\\"none\\\">\\r\\n              <ion-label position=\\\"stacked\\\">Adresse</ion-label>\\r\\n\\r\\n              <ion-input type=\\\"text\\\" #query clearInput autocapitalize=\\\"word\\\" [(ngModel)]=\\\"location.addressAutocomplete.query\\\"\\r\\n                [ngModelOptions]=\\\"{standalone: true}\\\" (ionInput)=\\\"getLocations()\\\" (ionBlur)=\\\"pickupBlur()\\\"\\r\\n                (ionFocus)=\\\"pickupFocus()\\\"> </ion-input>\\r\\n            </ion-item>\\r\\n            <ion-list\\r\\n              [hidden]=\\\"location.addressAutocompleteItems.length === 0 || disableaddress === true || location.addressAutocomplete.query.length === 0 \\\">\\r\\n              <ion-item *ngFor=\\\"let item of location.addressAutocompleteItems\\\" tappable (click)=\\\"addressItem(item)\\\">\\r\\n                {{ item }}\\r\\n              </ion-item>\\r\\n            </ion-list>\\r\\n\\r\\n\\r\\n\\r\\n            <ion-item lines=\\\"none\\\">\\r\\n              <ion-label position=\\\"stacked\\\">Ihre Rolle in der Organisation</ion-label>\\r\\n\\r\\n              <ion-select formControlName=\\\"role\\\" cancelText=\\\"Abbrechen\\\" okText=\\\"Fertig\\\">\\r\\n                <ion-select-option>Geschäftsinhaber</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <ion-item lines=\\\"none\\\">\\r\\n              <ion-label position=\\\"stacked\\\">E-Mail</ion-label>\\r\\n              <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" clearInput>\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n            <ion-item lines=\\\"none\\\">\\r\\n              <ion-label position=\\\"stacked\\\">Passwort</ion-label>\\r\\n              <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" clearInput>\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n          </ion-list>\\r\\n\\r\\n          <div class=\\\"divider\\\"></div>\\r\\n\\r\\n          <div class=\\\"container\\\">\\r\\n            <ion-button color=\\\"primary\\\" expand=\\\"block\\\" [disabled]=\\\"!form.valid\\\" (click)=\\\"update(form)\\\">Aktualisieren\\r\\n            </ion-button>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVyL3Byb2ZpbGUvZGV0YWlscy9kZXRhaWxzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ToastController, NavController } from '@ionic/angular';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { HelperService } from 'src/app/services/helper.service';\r\nimport { LocationService } from 'src/app/services/location.service';\r\n\r\n@Component({\r\n  selector: 'app-details',\r\n  templateUrl: './details.page.html',\r\n  styleUrls: ['./details.page.scss'],\r\n})\r\nexport class DetailsPage implements OnInit {\r\n\r\n  form: FormGroup;\r\n  userData: any;\r\n  disableaddress = true;\r\n  myLocation: string;\r\n\r\n\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(public toastController: ToastController, private navController: NavController, private api: ApiService, private fb: FormBuilder, private helper: HelperService, private location: LocationService) {\r\n    this.location.addressAutocompleteItems = [];\r\n    this.location.addressAutocomplete = {\r\n      query: ''\r\n    };\r\n    // console.log('this query', this.location.addressAutocomplete.query);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      vorname: ['', Validators.required],\r\n      nachname: ['', Validators.required],\r\n      telephone: ['', Validators.required],\r\n      CompanyName: ['', Validators.required],\r\n      // address: ['', Validators.required],\r\n      role: [''],\r\n      email: [{ value: '', disabled: true }, Validators.required],\r\n      password: [{ value: '', disabled: true }, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n    });\r\n\r\n    this.api.getUser(localStorage.getItem('uid')).subscribe(res => {\r\n\r\n      this.userData = res;\r\n      // console.log(this.userData);\r\n      this.api.getEmployerData(localStorage.getItem('uid')).subscribe(resy => {\r\n        this.userData = { ...this.userData, ...resy };\r\n\r\n        this.myLocation = this.userData.address;\r\n        console.log('my Location is ', this.myLocation);\r\n\r\n        this.location.addressAutocomplete = {\r\n          query: this.myLocation\r\n        };\r\n        console.log('this query', this.location.addressAutocomplete.query);\r\n\r\n        this.form.patchValue({\r\n          'vorname': this.userData.vorname,\r\n          'nachname': this.userData.nachname,\r\n          'telephone': this.userData.telephone,\r\n          'CompanyName': this.userData.CompanyName,\r\n          // 'location.addressAutocomplete.query': this.myLocation,\r\n          'role': this.userData.role,\r\n          'email': this.userData.email,\r\n          'password': this.userData.password\r\n        });\r\n        // console.log(\"this is working...\" + this.form.get('vorname').value);\r\n\r\n        // this.form.get('vorname').setValue(this.userData.vorname);\r\n        // this.form.get('nachname').setValue(this.userData.nachname);\r\n        // this.form.get('telephone').setValue(this.userData.telephone);\r\n        // this.form.get('CompanyName').setValue(this.userData.CompanyName);\r\n        // this.form.get('address').setValue(this.userData.address);\r\n        // this.form.get('role').setValue(this.userData.role);\r\n        // this.form.get('email').setValue(this.userData.email);\r\n        // this.form.get('password').setValue(this.userData.password);\r\n\r\n        // console.log(this.userData);\r\n      }, err => {\r\n        // console.log(err.message);\r\n      });\r\n    });\r\n\r\n    /*\r\n      name: [{ value: '', disabled: true }, Validators.required],\r\n      name: [{ value: '', disabled: this.variable }, Validators.required]\r\n      this.form.controls['name'].disable();\r\n   */\r\n\r\n  }\r\n  // end ngOnInit\r\n\r\n  update(data) {\r\n    if (this.myLocation === '') {\r\n      alert('Please file the address field');\r\n    } else {\r\n      const formData = {\r\n        vorname: data.value.vorname,\r\n        nachname: data.value.nachname,\r\n        telephone: data.value.telephone,\r\n        CompanyName: data.value.CompanyName,\r\n        role: data.value.role,\r\n        email: data.value.email,\r\n        password: data.value.password\r\n      };\r\n      // console.log(formData);\r\n      this.api.updateEmployerData(localStorage.getItem('uid'), {\r\n        vorname: formData.vorname,\r\n        nachname: formData.nachname,\r\n        telephone: formData.telephone,\r\n        CompanyName: formData.CompanyName,\r\n        address: this.myLocation,\r\n        role: formData.role,\r\n      }).then(() => {\r\n        this.helper.presentToast('Erfolgreich aktualisiert.');\r\n        this.navController.navigateBack('/employer/profile');\r\n\r\n      }, err => {\r\n        this.helper.presentToast(err.message);\r\n      });\r\n    } // else ended\r\n\r\n\r\n\r\n\r\n\r\n    // this.updated();\r\n\r\n  }\r\n  // async updated() {\r\n  //   const toast = await this.toastController.create({\r\n  //     message: 'Erfolgreich aktualisiert.',\r\n  //     position: 'top',\r\n  //     duration: 1000\r\n  //   });\r\n  //   toast.present();\r\n  //   this.navController.navigateBack(\"/employer/profile\");\r\n  // }\r\n\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getLocations() {\r\n    this.location.addressUpdateSearch();\r\n  }\r\n\r\n  addressItem(item) {\r\n    this.disableaddress = true;\r\n    this.location.addressAutocomplete.query = item;\r\n    // this.form.controls['address'].setValue(item);\r\n    this.myLocation = item;\r\n    console.log('MY ITEM ', this.myLocation);\r\n\r\n    this.location.addressChooseItem(item);\r\n  }\r\n\r\n  pickupBlur() {\r\n    if (this.location.addressAutocomplete.query.length === 0) {\r\n      this.disableaddress = true;\r\n    }\r\n  }\r\n\r\n  pickupFocus() {\r\n    this.disableaddress = false;\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":""}