{"version":3,"sources":["webpack:///./src/app/start/register/register.module.ts","webpack:///./src/app/start/register/register.page.html","webpack:///./src/app/start/register/register.page.scss","webpack:///./src/app/start/register/register.page.ts"],"names":[],"mappings":"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","file":"start-register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","module.exports = \"<ion-content>\\r\\n  <div class=\\\"main\\\">\\r\\n    <div class=\\\"header container\\\">\\r\\n      <ion-back-button text=\\\"\\\" defaultHref=\\\"\\\" icon=\\\"arrow-round-back\\\"></ion-back-button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"content\\\">\\r\\n      <div class=\\\"title container\\\">\\r\\n        <h2>Registrieren</h2>\\r\\n        <div class=\\\"text\\\">\\r\\n          <p>Schnell & einfach registrieren und noch heute beginnen Aufträge anzunehmen oder in Auftrag zu geben.</p>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"general\\\">\\r\\n        <form [formGroup]=\\\"form\\\">\\r\\n          <ion-list>\\r\\n            <!-- type of account -->\\r\\n            <ion-item lines=\\\"none\\\">\\r\\n              <ion-label position=\\\"stacked\\\">Accountart</ion-label>\\r\\n              <ion-select [(ngModel)]=\\\"getType\\\" cancelText=\\\"Abbrechen\\\" okText=\\\"Fertig\\\" formControlName=\\\"type\\\" required>\\r\\n                <!-- employee -->\\r\\n                <ion-select-option value=\\\"employee\\\">Einsatzkraft</ion-select-option>\\r\\n                <!-- employer -->\\r\\n                <ion-select-option value=\\\"employer\\\">Organisation</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <!-- {{getType}} -->\\r\\n            <!-- name -->\\r\\n            <div class=\\\"grid-2\\\">\\r\\n              <!-- first name -->\\r\\n              <ion-item lines=\\\"none\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Vorname</ion-label>\\r\\n                <ion-input type=\\\"text\\\" clearInput autocapitalize=\\\"word\\\" autocomplete autocorrect\\r\\n                  formControlName=\\\"vorname\\\" required></ion-input>\\r\\n              </ion-item>\\r\\n\\r\\n              <!-- last name -->\\r\\n              <ion-item lines=\\\"none\\\">\\r\\n                <ion-label position=\\\"stacked\\\">Nachname</ion-label>\\r\\n                <ion-input type=\\\"text\\\" clearInput autocapitalize=\\\"word\\\" autocomplete autocorrect\\r\\n                  formControlName=\\\"nachname\\\" required></ion-input>\\r\\n              </ion-item>\\r\\n            </div>\\r\\n\\r\\n            <!-- email -->\\r\\n            <ion-item lines=\\\"none\\\">\\r\\n              <ion-label position=\\\"stacked\\\">E-Mail</ion-label>\\r\\n              <ion-input type=\\\"email\\\" clearInput formControlName=\\\"email\\\" required></ion-input>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- password -->\\r\\n            <ion-item lines=\\\"none\\\">\\r\\n              <ion-label position=\\\"stacked\\\">Passwort</ion-label>\\r\\n              <ion-input type=\\\"password\\\" clearInput formControlName=\\\"password\\\" required></ion-input>\\r\\n            </ion-item>\\r\\n          </ion-list>\\r\\n\\r\\n          <div class=\\\"divider\\\"></div>\\r\\n\\r\\n          <div class=\\\"container\\\">\\r\\n            <p>Mit Ihrer Registrierung erklären Sie sich mit unserer AGB & Datenschutzerklärung einverstanden.</p>\\r\\n\\r\\n            <ion-button (click)=\\\"submitForm(form)\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid || form.pristine\\\" color=\\\"primary\\\" expand=\\\"block\\\"> Jetzt registrieren </ion-button>\\r\\n\\r\\n            <!-- show if account type is set to \\\"EMPLOYEE\\\" -->\\r\\n            <!-- (click)=\\\"navigateEmployeeOnboarding()\\\" -->\\r\\n            <!-- show if account type is set to \\\"EMPLOYER\\\" -->\\r\\n            <!-- <ion-button (click)=\\\"submitForm(form)\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid || form.pristine \\\" color=\\\"primary\\\" expand=\\\"block\\\" >Jetzt registrieren</ion-button> -->\\r\\n            <!-- (click)=\\\"navigateEmployerOnboarding()\\\" -->\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YXJ0L3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { NavController } from '@ionic/angular';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { HelperService } from 'src/app/services/helper.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n\r\n  form: FormGroup;\r\n  public getType = '';\r\n  data: any;\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(private navController: NavController, private fb: FormBuilder, private auth: AuthService, private api: ApiService, public helper: HelperService) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      type: ['', Validators.required],\r\n      vorname: ['', Validators.required],\r\n      nachname: ['', Validators.required],\r\n      email: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.email\r\n      ])],\r\n      password: ['', Validators.compose(\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(6)\r\n        ])]\r\n    });\r\n  }\r\n  // navigation for Company\r\n  navigateEmployerOnboarding() {\r\n    this.navController.navigateRoot('/employer/onboarding');\r\n  }\r\n  // Navigation for Employee\r\n  navigateEmployeeOnboarding() {\r\n    this.navController.navigateRoot('/employee/onboarding');\r\n  }\r\n\r\n  // getting values from Registration form\r\n  submitForm(form: any) {\r\n    this.data = {\r\n      vorname: form.value.vorname,\r\n      nachname: form.value.nachname,\r\n      email: form.value.email,\r\n      password: form.value.password,\r\n      type: this.getType\r\n    };\r\n    // console.log(data.type);\r\n    // console.log(data.vorname + \" \" + data.nachname + \" \" + data.email + \" \" + data.password);\r\n    this.auth.signup(this.data.email, this.data.password)\r\n      .then(res => {\r\n        // console.log(res);\r\n        this.api.createUser(res.user.uid, {\r\n          email: this.data.email,\r\n          password: this.data.password,\r\n          type: this.data.type\r\n        })\r\n          .then(ress => {\r\n            if (this.data.type === 'employer') {\r\n              // console.log('Start' + this.data.type);\r\n              this.createEmployer(res.user.uid).then(after => {\r\n                this.helper.presentToast('EMPLOYER Account Created successfully!');\r\n                // console.log('Creating new user ' + res);\r\n                // this.toastr.success('Please complete rest of the Registeration Process.','Account Created.');\r\n                localStorage.setItem('uid', res.user.uid);\r\n                // this.router.navigate(['/onboarding']);\r\n                this.navController.navigateRoot('/login');\r\n              }, err => {\r\n                this.helper.presentToast(err.message + 'Error!');\r\n              });\r\n\r\n            } else {\r\n              this.createEmployee(res.user.uid).then(after => {\r\n                this.helper.presentToast('EMPLOYEE Account Created successfully!');\r\n                // console.log('Creating new user ' + res);\r\n                // this.toastr.success('Please complete rest of the Registeration Process.','Account Created.');\r\n                localStorage.setItem('uid', res.user.uid);\r\n                // this.router.navigate(['/onboarding']);\r\n                this.navController.navigateRoot('/login');\r\n              }, err => {\r\n                this.helper.presentToast(err.message + 'Error!');\r\n              });\r\n            }\r\n          }, err => {\r\n            this.helper.presentToast(err.message + 'Error!');\r\n            // this.toastr.error(err.message,'Error!');\r\n            // console.log(err.message);\r\n          });\r\n      }, err => {\r\n        this.helper.presentToast(err.message + 'Error!');\r\n        // this.toastr.error(err.message,'Error!');\r\n        // console.log(err.message);\r\n      });\r\n\r\n    // if (this.getType === 'EMPLOYEE') {\r\n    //   this.navController.navigateRoot('/employee/onboarding');\r\n    // } else {\r\n    // this.navController.navigateRoot('/employer/onboarding');\r\n    // }\r\n\r\n  }\r\n  // end of OnSubmit method\r\n\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n  createEmployee(id: string) {\r\n    return this.api.createEmployee(id, {\r\n      vorname: this.data.vorname,\r\n      nachname: this.data.nachname,\r\n      email: this.data.email\r\n    });\r\n  }\r\n  createEmployer(id: string) {\r\n    return this.api.createEmployer(id, {\r\n      vorname: this.data.vorname,\r\n      nachname: this.data.nachname\r\n    });\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":""}