{"version":3,"sources":["webpack:///./src/app/employee/profile/qualifications/qualifications.module.ts","webpack:///./src/app/employee/profile/qualifications/qualifications.page.html","webpack:///./src/app/employee/profile/qualifications/qualifications.page.scss","webpack:///./src/app/employee/profile/qualifications/qualifications.page.ts"],"names":[],"mappings":"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","file":"employee-profile-qualifications-qualifications-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QualificationsPage } from './qualifications.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QualificationsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [QualificationsPage]\n})\nexport class QualificationsPageModule {}\n","module.exports = \"<ion-content>\\n  <div class=\\\"main\\\">\\n    <div class=\\\"header container\\\">\\n      <ion-back-button text=\\\"\\\" defaultHref=\\\"\\\" icon=\\\"arrow-round-back\\\"></ion-back-button>\\n    </div>\\n\\n    <div class=\\\"content\\\">\\n      <div class=\\\"title container\\\">\\n        <h2>Qualifikationen ändern</h2>\\n      </div>\\n      \\n      <div class=\\\"general\\\">\\n        <form [formGroup]=\\\"form\\\">\\n          <!-- {{ getEmployeeData.nachname}} -->\\n          <ion-list>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label position=\\\"stacked\\\">Persönliche Qualifikation</ion-label>\\n              <!-- {{getEmployeeData.qualifikation}} -->\\n              <ion-select cancelText=\\\"Abbrechen\\\" okText=\\\"Fertig\\\" formControlName=\\\"qualifikation\\\">\\n                <ion-select-option value=\\\"SANITAETSHELFER\\\">Sanitätsheler</ion-select-option>\\n                <ion-select-option value=\\\"RETTUNGSHELFER\\\">Rettungshelfer</ion-select-option>\\n                <ion-select-option value=\\\"RETTUNGSSANITAETER\\\">Rettungssanitäter</ion-select-option>\\n                <ion-select-option value=\\\"RETTUNGSASSISTENT\\\">Rettungsassistent</ion-select-option>\\n                <ion-select-option value=\\\"NOTFALLSANITAETER\\\">Notfallsanitäter</ion-select-option>\\n                <ion-select-option value=\\\"ARZT\\\">Arzt</ion-select-option>\\n                <ion-select-option value=\\\"ARZTRETTUNGSDIENST\\\">Arzt im Rettungsdienst</ion-select-option>\\n              </ion-select>\\n\\n              <!-- training certificate -->\\n              <ion-input type=\\\"file\\\" (change)=\\\"uploadFile($event, 1)\\\" placeholder=\\\"Fortbildungsnachweis hochladen\\\"></ion-input>\\n            </ion-item>\\n\\n            <!-- driving license -->\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label position=\\\"stacked\\\">Führerscheinklasse</ion-label>\\n              <ion-select cancelText=\\\"Abbrechen\\\" okText=\\\"Fertig\\\" formControlName=\\\"führerscheinklasse\\\">\\n                <ion-select-option value=\\\"NO\\\">Kein Führerschein</ion-select-option>\\n                <ion-select-option value=\\\"BENEFICIAL\\\">Führerschein vorteilhaft</ion-select-option>\\n                <ion-select-option value=\\\"B\\\">B</ion-select-option>\\n                <ion-select-option value=\\\"B1\\\">B1</ion-select-option>\\n              </ion-select> \\n\\n              <!-- Show only if first option is not selected, driving license certificate -->\\n              <ion-input type=\\\"file\\\" (change)=\\\"uploadFile($event, 2)\\\" placeholder=\\\"Führerschein Vorderseite hochladen\\\"></ion-input>\\n              <ion-input type=\\\"file\\\" (change)=\\\"uploadFile($event, 3)\\\" placeholder=\\\"Führerschein Rückseite hochladen\\\"></ion-input>\\n            </ion-item>\\n\\n            <!-- other qualification -->\\n            <ion-item lines=\\\"none\\\" *ngFor=\\\"let item of field; let i = index;\\\">\\n              <ion-label position=\\\"stacked\\\">Sonstige Qualifikation</ion-label>\\n\\n              <!-- name of qualification -->\\n              <ion-input type=\\\"text\\\" clearInput [(ngModel)]=\\\"item.text\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></ion-input>\\n\\n              <!-- other qualification certificate -->\\n              <ion-input type=\\\"file\\\" (change)=\\\"uploadFile($event, 4, i)\\\" placeholder=\\\"Qualifikationsnachweis\\\"></ion-input>\\n            </ion-item>\\n\\n            <!-- add another other qualification -->\\n            <div class=\\\"add-new container\\\" (click)=\\\"addNewfield()\\\">\\n              <ion-icon name=\\\"add\\\"></ion-icon><p>Weitere sonstige Qualifikation hinzufügen</p>\\n            </div>\\n          </ion-list>\\n          \\n          <div class=\\\"divider\\\"></div>\\n          \\n          <div class=\\\"container\\\">\\n            <ion-button color=\\\"primary\\\" expand=\\\"block\\\"  (click)=\\\"submit(form)\\\">Aktualisieren</ion-button>\\n          </div>\\n          \\n        </form>\\n      </div>\\n      \\n    </div>\\n  </div>\\n</ion-content>\"","module.exports = \".add-new {\\n  margin-top: 12px;\\n  display: grid;\\n  grid-template-columns: 20px auto;\\n  align-items: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW1wbG95ZWUvcHJvZmlsZS9xdWFsaWZpY2F0aW9ucy9EOlxcS29kZUFscGhhXFxXb3Jrc3BhY2VcXFByb2plY3RzXFxEQUhNU1xcVGVzdFxcU2FhZC9zcmNcXGFwcFxcZW1wbG95ZWVcXHByb2ZpbGVcXHF1YWxpZmljYXRpb25zXFxxdWFsaWZpY2F0aW9ucy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLGdDQUFnQztFQUNoQyxtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL3Byb2ZpbGUvcXVhbGlmaWNhdGlvbnMvcXVhbGlmaWNhdGlvbnMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFkZC1uZXcge1xuICBtYXJnaW4tdG9wOiAxMnB4O1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDIwcHggYXV0bztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ToastController, NavController } from '@ionic/angular';\nimport { HelperService } from 'src/app/services/helper.service';\nimport { AngularFireStorage, AngularFireStorageReference, AngularFireUploadTask } from '@angular/fire/storage';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { map, take } from 'rxjs/operators';\nimport { finalize } from 'rxjs/operators';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-qualifications',\n  templateUrl: './qualifications.page.html',\n  styleUrls: ['./qualifications.page.scss'],\n})\nexport class QualificationsPage implements OnInit {\n\n  form: FormGroup;\n  data;\n  fileArr = [];\n  field = [];\n  ref: AngularFireStorageReference;\n  task: AngularFireUploadTask;\n  promises = [];\n  urls = [];\n  getEmployeeData;\n  getEmployeeID;\n  filesRecord;\n\n  constructor(public toastController: ToastController, private navController: NavController, private helper: HelperService, private fb: FormBuilder, private fireStorage: AngularFireStorage, private router: Router, private api: ApiService) { }\n\n  async update() {\n    const toast = await this.toastController.create({\n      message: 'Erfolgreich aktualisiert.',\n      position: 'top',\n      duration: 1000\n    });\n    toast.present();\n    this.navController.navigateBack('/employee/profile');\n  }\n\n  ngOnInit() {\n    this.api.getEmployeeData(localStorage.getItem('uid')).subscribe(res => {\n      this.getEmployeeData = res;\n      console.log(this.getEmployeeData);\n      this.getEmployeeID = localStorage.getItem('uid');\n      // console.log(this.getEmployeeData);\n      // this.filesRecord = this.getEmployeeData.files;\n      // this.getEmployeeData =res.files;\n      // console.log(\"Files record\\n \" + this.filesRecord);\n    }, err => {\n      console.log(err.message);\n    });\n\n\n\n    let x: File;\n    this.field.push({\n      text: '',\n      file: x\n    });\n    this.form = this.fb.group({\n      qualifikation: ['', Validators.required],\n      führerscheinklasse: ['', Validators.required]\n    });\n  }\n\n  submit(form) {\n    this.data = {\n      qualifikation: form.value.qualifikation,\n      führerscheinklasse: form.value.führerscheinklasse,\n      sonstige: this.field[0].text,\n      files: [],\n      qualification: []\n    };\n\n    this.field.forEach(a => {\n      this.data.qualification.push(a.text);\n      if (a.file) {\n        this.fileArr.push(a.file);\n      }\n    });\n\n    this.fileArr.forEach((a, i) => {\n      this.ref = this.fireStorage.ref('Files/' + this.getEmployeeID);\n      this.task = this.ref.put(a);\n      this.promises.push(this.task);\n      this.urls.push({ ref: this.ref, index: i, fileId: this.getEmployeeID, name: a.name });\n\n      this.task.snapshotChanges().subscribe();\n\n    });\n\n    Promise.all(\n      this.promises\n    )\n      .then((url: Array<any>) => {\n        this.urls.forEach(a => {\n          a.ref.getDownloadURL().subscribe(res => {\n            this.data.files.push({\n              fileURL: res,\n              fileID: a.fileId,\n              name: a.name\n            });\n          });\n        });\n        this.updateEmplyee();\n      })\n      .catch((error) => {\n        console.log(`Some failed: `, error.message);\n      });\n  }\n\n  uploadFile(event, val, i?) {\n    if (i && i > 0) {\n      this.field[i].file = event.target.files[0];\n      return;\n    } else {\n      this.fileArr[val] = event.target.files[0];\n    }\n  }\n\n  updateEmplyee() {\n\n    this.api.updateEmployee(localStorage.getItem('uid'), this.data)\n      .then(after => {\n        this.router.navigate(['employee/profile']);\n      });\n  }\n\n  addNewfield() {\n    this.field.push({\n      text: '',\n      file: ''\n    });\n  }\n\n}\n"],"sourceRoot":""}