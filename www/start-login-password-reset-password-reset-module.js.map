{"version":3,"sources":["webpack:///./src/app/start/login/password-reset/password-reset.module.ts","webpack:///./src/app/start/login/password-reset/password-reset.page.html","webpack:///./src/app/start/login/password-reset/password-reset.page.scss","webpack:///./src/app/start/login/password-reset/password-reset.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEa;AAE1D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sEAAiB;KAC7B;CACF,CAAC;AAWF;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QATnC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,sEAAiB,CAAC;SAClC,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBpC,u5BAAu5B,OAAO,4T;;;;;;;;;;;ACA95B,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACc;AACJ;AACI;AAOhE;IAME,2BAAmB,eAAgC,EAAS,aAA4B,EAAU,IAAiB,EAAS,MAAqB;QAA9H,oBAAe,GAAf,eAAe,CAAiB;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAU,SAAI,GAAJ,IAAI,CAAa;QAAS,WAAM,GAAN,MAAM,CAAe;QAJjJ,UAAK,GAAG,EAAE,CAAC;IAI0I,CAAC;IAFtJ,oCAAQ,GAAR;IACA,CAAC;IAGD,0BAA0B;IAC1B,sDAAsD;IACtD,qGAAqG;IACrG,sBAAsB;IACtB,sBAAsB;IACtB,QAAQ;IACR,qBAAqB;IACrB,+CAA+C;IAC/C,IAAI;IAEJ,yCAAa,GAAb;QACE,2CAA2C;QAD7C,iBAuBC;QApBC,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC;iBAChC,IAAI,CAAC,aAAG;gBACP,KAAI,CAAC,MAAM,CAAC,YAAY,CAAC,oFAAoF,CAAC,CAAC;gBAC/G,gFAAgF;gBAChF,mCAAmC;gBACnC,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YAC5C,CAAC,EAAE,aAAG;gBACJ,KAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC;gBACjD,2CAA2C;gBAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;SACN;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAE9B,sEAAsE;YACtE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,yBAAyB,GAAG,mBAAmB,CAAC,CAAC;YAC1E,+DAA+D;SAChE;IAEH,CAAC;IAzCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,gIAAyC;;SAE1C,CAAC;yCAOoC,8DAAe,EAAwB,4DAAa,EAAgB,yEAAW,EAAiB,6EAAa;OANtI,iBAAiB,CA4C7B;IAAD,wBAAC;CAAA;AA5C6B","file":"start-login-password-reset-password-reset-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PasswordResetPage } from './password-reset.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PasswordResetPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [PasswordResetPage]\r\n})\r\nexport class PasswordResetPageModule {}\r\n","module.exports = \"<ion-content>\\r\\n  <div class=\\\"main\\\">\\r\\n    <div class=\\\"header container\\\">\\r\\n      <ion-back-button text=\\\"\\\" defaultHref=\\\"\\\" icon=\\\"arrow-round-back\\\"></ion-back-button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"content\\\">\\r\\n      <div class=\\\"title container\\\">\\r\\n        <h2>Passwort zurücksetzen</h2>\\r\\n        <div class=\\\"text\\\">\\r\\n          <p>Passwort vergessen? Kein Problem! Einfach E-Mail eintragen und du erhältst einen Link zum Zurücksetzen\\r\\n            deines Passworts.</p>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"general\\\">\\r\\n        <form>\\r\\n          <ion-list>\\r\\n            <ion-item lines=\\\"none\\\">\\r\\n              <ion-label position=\\\"stacked\\\">E-Mail</ion-label>\\r\\n              <ion-input type=\\\"email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" clearInput required> </ion-input>\\r\\n            </ion-item>\\r\\n          </ion-list>\\r\\n          {{email}}\\r\\n          <div class=\\\"divider\\\"></div>\\r\\n\\r\\n          <div class=\\\"container\\\">\\r\\n            <ion-button color=\\\"primary\\\" expand=\\\"block\\\" (click)=\\\"passwordReset()\\\">Jetzt zurücksetzen</ion-button>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YXJ0L2xvZ2luL3Bhc3N3b3JkLXJlc2V0L3Bhc3N3b3JkLXJlc2V0LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ToastController, NavController } from '@ionic/angular';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { HelperService } from 'src/app/services/helper.service';\r\n\r\n@Component({\r\n  selector: 'app-password-reset',\r\n  templateUrl: './password-reset.page.html',\r\n  styleUrls: ['./password-reset.page.scss'],\r\n})\r\nexport class PasswordResetPage implements OnInit {\r\n\r\n  email = '';\r\n\r\n  ngOnInit() {\r\n  }\r\n  constructor(public toastController: ToastController, public navController: NavController, private auth: AuthService, public helper: HelperService) { }\r\n\r\n  // async passwordReset() {\r\n  //   const toast = await this.toastController.create({\r\n  //     message: 'Wir haben dir erfolgreich einen Link zur Zurücksetzung deines Passworts geschickt.',\r\n  //     duration: 4000,\r\n  //     position: 'top'\r\n  //   });\r\n  //   toast.present();\r\n  //   this.navController.navigateRoot('/start');\r\n  // }\r\n\r\n  passwordReset() {\r\n    // console.log('starts of Password reset');\r\n\r\n    if (this.email != '') {\r\n      this.auth.resetPassword(this.email)\r\n        .then(res => {\r\n          this.helper.presentToast('Wir haben dir erfolgreich einen Link zur Zurücksetzung deines Passworts geschickt.');\r\n          // this.toastr.success('An Email has sent to your account for Password reset.');\r\n          // this.router.navigate(['login']);\r\n          this.navController.navigateRoot('/start');\r\n        }, err => {\r\n          this.helper.presentToast(err.message + 'Error!');\r\n          // this.toastr.error(err.message,'Error!');\r\n          console.log(err.message);\r\n        });\r\n    } else {\r\n      console.log('Else Condition');\r\n\r\n      // this.toastr.warning('Please Provide a Email.','Unable to Proceed');\r\n      this.helper.presentToast('Please Provide a Email.' + 'Unable to Proceed');\r\n      // console.log('Please Provide a Email.', 'Unable to Proceed');\r\n    }\r\n\r\n  }\r\n  // Reset Password Method end\r\n\r\n}\r\n\r\n\r\n"],"sourceRoot":""}