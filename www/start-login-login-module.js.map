{"version":3,"sources":["webpack:///./src/app/start/login/login.module.ts","webpack:///./src/app/start/login/login.page.html","webpack:///./src/app/start/login/login.page.scss","webpack:///./src/app/start/login/login.page.ts"],"names":[],"mappings":"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","file":"start-login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","module.exports = \"<ion-content>\\r\\n  <div class=\\\"main\\\">\\r\\n    <div class=\\\"header container\\\">\\r\\n      <ion-back-button text=\\\"\\\" defaultHref=\\\"\\\" icon=\\\"arrow-round-back\\\"></ion-back-button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"content\\\">\\r\\n      <div class=\\\"title container\\\">\\r\\n        <h2>Login</h2>\\r\\n        <div class=\\\"text\\\">\\r\\n          <p>Willkommen zur√ºck! Trage deine Mail und das entsprechende Passwort, um onPoint zu starten.</p>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- <div class=\\\"general\\\"> -->\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <ion-list>\\r\\n          <ion-item lines=\\\"none\\\">\\r\\n            <ion-label position=\\\"stacked\\\">E-Mail</ion-label>\\r\\n            <ion-input type=\\\"email\\\" clearInput name=\\\"email\\\" id=\\\"email\\\" required formControlName=\\\"email\\\"> </ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item lines=\\\"none\\\">\\r\\n            <ion-label position=\\\"stacked\\\">Passwort</ion-label>\\r\\n            <ion-input type=\\\"password\\\" clearInput iname=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" required formControlName=\\\"password\\\" ></ion-input>\\r\\n          </ion-item>\\r\\n        </ion-list>\\r\\n\\r\\n        <div class=\\\"password-reset container\\\">\\r\\n          <p class=\\\"btn-link pointer\\\" (click)=\\\"navigatePasswordReset()\\\">Passwort vergessen?</p>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"divider\\\"></div>\\r\\n\\r\\n        <div class=\\\"container\\\">\\r\\n          <ion-button (click)=\\\"login(form)\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid || form.pristine \\\" color=\\\"primary\\\"\\r\\n            expand=\\\"block\\\" class=\\\"button button-primary\\\"> Jetzt einloggen</ion-button>\\r\\n          <!-- (click)=\\\"login(form)\\\" -->\\r\\n          <!-- (click)=\\\"navigateHome()\\\" -->\\r\\n          <!-- [disabled]=\\\"form.pristine || form.invalid\\\" -->\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n      <!-- </div> -->\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\"","module.exports = \".password-reset {\\n  color: var(--ion-color-medium);\\n  text-align: right; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RhcnQvbG9naW4vRDpcXEtvZGVBbHBoYVxcV29ya3NwYWNlXFxQcm9qZWN0c1xcREFITVNcXFRlc3RcXFNhYWQvc3JjXFxhcHBcXHN0YXJ0XFxsb2dpblxcbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsOEJBQThCO0VBQzlCLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvc3RhcnQvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhc3N3b3JkLXJlc2V0IHtcclxuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLW1lZGl1bSk7XHJcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgXHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { NavController } from '@ionic/angular';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { HelperService } from 'src/app/services/helper.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  form: FormGroup;\r\n  companyData: any = ' ';\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(private navController: NavController, private api: ApiService, private fb: FormBuilder, private auth: AuthService, private helper: HelperService) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      email: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.email\r\n      ])],\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n  }\r\n\r\n  navigatePasswordReset() {\r\n    this.navController.navigateForward('/login/password-reset');\r\n  }\r\n  navigateHome() {\r\n    this.navController.navigateRoot('/');\r\n  }\r\n\r\n  // Strar of Login method\r\n  login(form) {\r\n    // console.log('Login starts');\r\n    const email = form.value.email;\r\n    const password = form.value.password;\r\n\r\n    this.auth.login(email, password)\r\n      .then(res => {\r\n        this.api.getUser(res.user.uid)\r\n          .subscribe((user: any) => {\r\n            if (user.type === 'ADMIN ') {\r\n              // this.router.navigate(['admin/companies']);\r\n              localStorage.setItem('uid', res.user.uid);\r\n              // localStorage.setItem('type', 'admin');\r\n            } else\r\n            if (user.type === 'employer') {\r\n                localStorage.setItem('uid', res.user.uid);\r\n                // localStorage.setItem('type', 'employer');\r\n                this.api.getEmployerData(res.user.uid)\r\n                  .subscribe(res => {\r\n                    this.companyData = res;\r\n                    // console.log(res);\r\n                    // localStorage.setItem('userName', this.userData.fname);\r\n                    // this.helper.setuserName(this.userData.fname);\r\n                    if (this.companyData.telephone === '' || this.companyData.telephone == null) {\r\n                      this.navController.navigateRoot('/employer/onboarding');\r\n                    } else {\r\n                      this.navController.navigateRoot('/employer/ads');\r\n                    }\r\n                  });\r\n\r\n                // if(!user.firmenname)\r\n                // this.router.navigate(['onboarding']);\r\n                // else\r\n                // this.router.navigate(['overview']);\r\n                /* Taking Company data; checking employer/onboarding form is already fild*/\r\n\r\n              } else\r\n                if (user.type === 'employee') {\r\n                  localStorage.setItem('uid', res.user.uid);\r\n                  // localStorage.setItem('type', ' employee');\r\n                  this.api.getEmployeeData(res.user.uid)\r\n                    .subscribe( res => {\r\n                      this.companyData = res;\r\n                      // console.log(res);\r\n                      // localStorage.setItem('userName', this.userData.fname);\r\n                      // this.helper.setuserName(this.userData.fname);\r\n                      if (this.companyData.telefonnumer === '' || this.companyData.telefonnumer == null) {\r\n                        this.navController.navigateRoot('/employee/onboarding');\r\n                      } else {\r\n                        this.navController.navigateRoot('/employee/appointments');\r\n                      }\r\n                    });\r\n                  // if(!user.firmenname)\r\n                  // this.router.navigate(['onboarding']);\r\n                  // else\r\n                  // this.router.navigate(['overview']);\r\n\r\n\r\n                } else {\r\n                  this.auth.logout();\r\n                  // this.toastr.error('User Account Doesnt Exists');\r\n                  this.helper.presentToast('User Account Doesnt Exists!');\r\n                }\r\n          });\r\n      }, err => {\r\n        // this.toastr.error(err.message,'Error!');\r\n        this.helper.presentToast(err.message + 'Error!');\r\n        console.log(err.message);\r\n\r\n      });\r\n    // if (this.getType === 'EMPLOYEE') {\r\n    //   this.navController.navigateRoot('/employee/onboarding');\r\n    // } else {\r\n    // this.navController.navigateRoot('/employer/onboarding');\r\n    // }\r\n    // console.log('Login ends');\r\n  }\r\n  // end of login method\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n}\r\n"],"sourceRoot":""}