{"version":3,"sources":["webpack:///./src/app/employer/onboarding/onboarding.module.ts","webpack:///./src/app/employer/onboarding/onboarding.page.html","webpack:///./src/app/employer/onboarding/onboarding.page.scss","webpack:///./src/app/employer/onboarding/onboarding.page.ts"],"names":[],"mappings":"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","file":"employer-onboarding-onboarding-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { OnboardingPage } from './onboarding.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OnboardingPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [OnboardingPage]\r\n})\r\nexport class OnboardingPageModule {}\r\n","module.exports = \"<ion-content>\\r\\n  <div class=\\\"main\\\">\\r\\n    <div class=\\\"header container\\\">\\r\\n      <div class=\\\"logo\\\">\\r\\n        <p>medApp</p>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"content\\\">\\r\\n      <div class=\\\"title container\\\">\\r\\n        <h1>Erste Schritte mit medAPP</h1>\\r\\n        <div class=\\\"text\\\">\\r\\n          <p></p>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"general\\\">\\r\\n        <form [formGroup]=\\\"form\\\">\\r\\n          <ion-list>\\r\\n            <!-- contact persons organisation role -->\\r\\n            <ion-item lines=\\\"none\\\">\\r\\n              <ion-label position=\\\"stacked\\\">Ihre Rolle in der Organisation</ion-label>\\r\\n              <ion-select formControlName=\\\"role\\\" cancelText=\\\"Abbrechen\\\" okText=\\\"Fertig\\\">\\r\\n                <ion-select-option>Geschäftsinhaber</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- organisation name -->\\r\\n            <ion-item lines=\\\"none\\\">\\r\\n              <ion-label position=\\\"stacked\\\">Name der Orga</ion-label>\\r\\n              <ion-input type=\\\"text\\\" formControlName=\\\"CompanyName\\\" clearInput autocapitalize=\\\"word\\\" autocomplete\\r\\n                autocorrect></ion-input>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- organisation address -->\\r\\n            <ion-item lines=\\\"none\\\">\\r\\n              <ion-label position=\\\"stacked\\\">Adresse</ion-label>\\r\\n              <ion-input type=\\\"text\\\" clearInput autocapitalize=\\\"word\\\" [(ngModel)]=\\\"location.addressAutocomplete.query\\\"\\r\\n                [ngModelOptions]=\\\"{standalone: true}\\\" (ionInput)=\\\"getLocations()\\\" (ionBlur)=\\\"pickupBlur()\\\"\\r\\n                (ionFocus)=\\\"pickupFocus()\\\" required></ion-input>\\r\\n            </ion-item>\\r\\n            <ion-list\\r\\n              [hidden]=\\\"location.addressAutocompleteItems.length === 0 || disableaddress === true || location.addressAutocomplete.query.length === 0 \\\">\\r\\n              <ion-item *ngFor=\\\"let item of location.addressAutocompleteItems\\\" tappable (click)=\\\"addressItem(item)\\\">\\r\\n                {{ item }}\\r\\n              </ion-item>\\r\\n            </ion-list>\\r\\n\\r\\n            <!-- contact persons phone number -->\\r\\n            <ion-item lines=\\\"none\\\">\\r\\n              <ion-label position=\\\"stacked\\\">Telefonnumer</ion-label>\\r\\n              <ion-input type=\\\"number\\\" formControlName=\\\"telephone\\\" clearInput autocomplete autocorrect required>\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n          </ion-list>\\r\\n\\r\\n          <!-- finish onboarding -->\\r\\n          <div class=\\\"container\\\">\\r\\n            <ion-button color=\\\"primary\\\" expand=\\\"block\\\" (click)=\\\"submit(form)\\\"\\r\\n              [disabled]=\\\"form.invalid || form.pristine\\\">Einrichtung abschließen</ion-button>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVyL29uYm9hcmRpbmcvb25ib2FyZGluZy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { NavController } from '@ionic/angular';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { HelperService } from 'src/app/services/helper.service';\r\nimport { LocationService } from 'src/app/services/location.service';\r\n\r\n@Component({\r\n  selector: 'app-onboarding',\r\n  templateUrl: './onboarding.page.html',\r\n  styleUrls: ['./onboarding.page.scss'],\r\n})\r\nexport class OnboardingPage implements OnInit {\r\n\r\n  form: FormGroup;\r\n  data: any;\r\n  disableaddress: boolean;\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(private navController: NavController, private fb: FormBuilder, private api: ApiService, private helper: HelperService, private location: LocationService) {\r\n    this.location.addressAutocompleteItems = [];\r\n    this.location.addressAutocomplete = {\r\n      query: ''\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      role: [''],\r\n      CompanyName: ['', Validators.required],\r\n      address: [''],\r\n      telephone: ['', Validators.required]\r\n    });\r\n\r\n  }\r\n\r\n  getLocations() {\r\n    this.location.addressUpdateSearch();\r\n  }\r\n\r\n  addressItem(item) {\r\n    this.disableaddress = true;\r\n    this.location.addressAutocomplete.query = item;\r\n    this.form.controls['address'].setValue(item);\r\n    this.location.addressChooseItem(item);\r\n  }\r\n\r\n  pickupBlur() {\r\n    if (this.location.addressAutocomplete.query.length === 0) {\r\n      this.disableaddress = true;\r\n    }\r\n  }\r\n\r\n  pickupFocus() {\r\n    this.disableaddress = false;\r\n  }\r\n\r\n\r\n  submit(form: any) {\r\n    this.data = {\r\n      role: form.value.role,\r\n      CompanyName: form.value.CompanyName,\r\n      address: form.value.address,\r\n      telephone: form.value.telephone\r\n    };\r\n    // console.log(this.form.value);\r\n    // console.log(this.data);\r\n\r\n    // console.log(this.data.role + \" \" + this.data.name + \" \" + this.data.address + \" \\n\" + this.data.telephone);\r\n    // let userId = localStorage.getItem('uid');\r\n    // console.log(localStorage.getItem('uid'));\r\n\r\n    this.api.updateEmployerData(localStorage.getItem('uid'), this.data).then(res => {\r\n\r\n      this.helper.presentToast('Company record save successfully!');\r\n      this.navController.navigateRoot('/employer/ads');\r\n\r\n    }, err => {\r\n      this.helper.presentToast(err.message);\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}