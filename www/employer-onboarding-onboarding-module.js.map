{"version":3,"sources":["webpack:///./src/app/employer/onboarding/onboarding.module.ts","webpack:///./src/app/employer/onboarding/onboarding.page.html","webpack:///./src/app/employer/onboarding/onboarding.page.scss","webpack:///./src/app/employer/onboarding/onboarding.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AAEV;AAEM;AAEnD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;KAC1B;CACF,CAAC;AAYF;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAVhC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,+DAAc,CAAC;SAC/B,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;AC1BjC,kpE;;;;;;;;;;;ACAA,+DAA+D,+J;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACH;AACqB;AACV;AACM;AAOhE;IAKE,wBAAoB,aAA4B,EAAU,EAAe,EAAU,GAAe,EAAU,MAAqB;QAA7G,kBAAa,GAAb,aAAa,CAAe;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,QAAG,GAAH,GAAG,CAAY;QAAU,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEtI,iCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACrC,CAAC,CAAC;IAEL,CAAC;IAED,qCAAY,GAAZ;QACE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;IACnD,CAAC;IAED,+BAAM,GAAN,UAAO,IAAS;QAAhB,iBAqBC;QApBC,IAAI,CAAC,IAAI,GAAG;YACV,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;YACrB,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW;YACnC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;YAC3B,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;SAChC,CAAC;QACF,8GAA8G;QAC9G,4CAA4C;QAC5C,4CAA4C;QAE5C,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAE,aAAG;YAE3E,KAAI,CAAC,MAAM,CAAC,YAAY,CAAC,mCAAmC,CAAC,CAAC;YAC9D,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QAEnD,CAAC,EAAE,aAAG;YACJ,KAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACxC,CAAC,CAAC;IAGJ,CAAC;IA1CU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,iHAAqC;;SAEtC,CAAC;yCAMmC,4DAAa,EAAc,0DAAW,EAAe,uEAAU,EAAkB,6EAAa;OALtH,cAAc,CA2C1B;IAAD,qBAAC;CAAA;AA3C0B","file":"employer-onboarding-onboarding-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OnboardingPage } from './onboarding.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OnboardingPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [OnboardingPage]\n})\nexport class OnboardingPageModule {}\n","module.exports = \"<ion-content>\\n  <div class=\\\"main\\\">\\n    <div class=\\\"header container\\\">\\n      <div class=\\\"logo\\\">\\n        <p>medApp</p>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"content\\\">\\n      <div class=\\\"title container\\\">\\n        <h1>Erste Schritte mit medAPP</h1>\\n        <div class=\\\"text\\\">\\n          <p></p>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"general\\\">\\n        <form [formGroup]=\\\"form\\\">\\n          <ion-list>\\n            <!-- contact persons organisation role -->\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label position=\\\"stacked\\\">Ihre Rolle in der Organisation</ion-label>\\n              <ion-select formControlName=\\\"role\\\" cancelText=\\\"Abbrechen\\\" okText=\\\"Fertig\\\" >\\n                <ion-select-option>Geschäftsinhaber</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n\\n            <!-- organisation name -->\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label position=\\\"stacked\\\">Name der Orga</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"CompanyName\\\" clearInput autocapitalize=\\\"word\\\" autocomplete autocorrect ></ion-input>\\n            </ion-item>\\n\\n            <!-- organisation address -->\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label position=\\\"stacked\\\">Adresse</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"address\\\" clearInput autocapitalize=\\\"word\\\" autocomplete autocorrect required></ion-input>\\n            </ion-item>\\n\\n            <!-- contact persons phone number -->\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label position=\\\"stacked\\\">Telefonnumer</ion-label>\\n              <ion-input type=\\\"number\\\" formControlName=\\\"telephone\\\"  clearInput autocomplete autocorrect required></ion-input>\\n            </ion-item>\\n          </ion-list>\\n\\n          <!-- finish onboarding -->\\n          <div class=\\\"container\\\">\\n            <ion-button color=\\\"primary\\\" expand=\\\"block\\\" (click)=\\\"submit(form)\\\" [disabled]=\\\"form.invalid || form.pristine\\\">Einrichtung abschließen</ion-button>\\n          </div>\\n\\n        </form>\\n      </div>\\n\\n    </div>\\n  </div>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVyL29uYm9hcmRpbmcvb25ib2FyZGluZy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from 'src/app/services/api.service';\nimport { HelperService } from 'src/app/services/helper.service';\n\n@Component({\n  selector: 'app-onboarding',\n  templateUrl: './onboarding.page.html',\n  styleUrls: ['./onboarding.page.scss'],\n})\nexport class OnboardingPage implements OnInit {\n\n  form: FormGroup;\n  data: any;\n  \n  constructor(private navController: NavController, private fb: FormBuilder, private api: ApiService, private helper: HelperService) { }\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      role: [''],\n      CompanyName: ['', Validators.required],\n      address: [''],\n      telephone: ['', Validators.required]\n    });\n    \n  }\n\n  navigateHome() {\n    this.navController.navigateRoot(\"/employer/ads\");\n  }\n\n  submit(form: any) {\n    this.data = {\n      role: form.value.role,\n      CompanyName: form.value.CompanyName,\n      address: form.value.address,\n      telephone: form.value.telephone\n    };\n    // console.log(this.data.role + \" \" + this.data.name + \" \" + this.data.address + \" \\n\" + this.data.telephone);\n    // let userId = localStorage.getItem('uid');\n    // console.log(localStorage.getItem('uid'));\n\n    this.api.updateEmployerData(localStorage.getItem('uid'), this.data).then( res => {\n      \n      this.helper.presentToast('Company record save successfully!');\n      this.navController.navigateRoot(\"/employer/ads\");\n\n    }, err => {\n      this.helper.presentToast(err.message);\n    })\n\n\n  }\n}\n"],"sourceRoot":""}