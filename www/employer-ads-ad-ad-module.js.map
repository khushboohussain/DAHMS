{"version":3,"sources":["webpack:///./src/app/employer/ads/ad/ad.module.ts","webpack:///./src/app/employer/ads/ad/ad.page.html","webpack:///./src/app/employer/ads/ad/ad.page.scss","webpack:///./src/app/employer/ads/ad/ad.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEV;AAEnC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+CAAM;KAClB;CACF,CAAC;AAWF;IAAA;IAA2B,CAAC;IAAf,YAAY;QATxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,+CAAM,CAAC;SACvB,CAAC;OACW,YAAY,CAAG;IAAD,mBAAC;CAAA;AAAH;;;;;;;;;;;;ACzBzB,oqCAAoqC,eAAe,6BAA6B,eAAe,uoBAAuoB,gBAAgB,KAAK,cAAc,YAAY,gBAAgB,KAAK,cAAc,yiBAAyiB,oBAAoB,KAAK,mBAAmB,KAAK,WAAW,IAAI,YAAY,4qBAA4qB,gBAAgB,MAAM,WAAW,eAAe,SAAS,MAAM,cAAc,uiBAAuiB,oBAAoB,KAAK,mBAAmB,KAAK,WAAW,8BAA8B,YAAY,mpBAAmpB,gBAAgB,YAAY,gBAAgB,GAAG,cAAc,0UAA0U,oBAAoB,KAAK,mBAAmB,KAAK,WAAW,IAAI,YAAY,wI;;;;;;;;;;;ACAzhK,+DAA+D,+I;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACH;AACW;AAQ1D;IASE,gBAAoB,aAA4B,EAAU,GAAe;QAArD,kBAAa,GAAb,aAAa,CAAe;QAAU,QAAG,GAAH,GAAG,CAAY;QAPzE,SAAI,GAAQ,EAAE,CAAC;IAO8D,CAAC;IAE9E,yBAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QACpC,4EAA4E;QAC5E,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU;QACnC,kCAAkC;QAClC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,OAAO,EAAE;YACjC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,gDAAgD;SACjD;aACI;YACH,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;YAC3B,8CAA8C;SAC/C;QAED,sCAAsC;QAEtC,IAAI;IAGN,CAAC;IAED,2EAA2E;IAC3E,qCAAoB,GAApB;QACE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,+BAA+B,CAAC,CAAC;IACtE,CAAC;IAED,6EAA6E;IAC7E,8CAA6B,GAA7B;QACE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,yCAAyC,CAAC,CAAC;IAChF,CAAC;IA3CU,MAAM;QALlB,+DAAS,CAAC;YACT,QAAQ,EAAE,QAAQ;YAClB,6FAA6B;;SAE9B,CAAC;yCAUmC,4DAAa,EAAe,uEAAU;OAT9D,MAAM,CA6ClB;IAAD,aAAC;CAAA;AA7CkB","file":"employer-ads-ad-ad-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdPage } from './ad.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AdPage]\n})\nexport class AdPageModule {}\n","module.exports = \"<ion-content>\\n  <div class=\\\"main\\\">\\n    <div class=\\\"header container\\\">\\n      <ion-back-button text=\\\"\\\" defaultHref=\\\"\\\" icon=\\\"arrow-round-back\\\"></ion-back-button>\\n    </div>\\n\\n    <div class=\\\"content\\\">\\n\\n      <div class=\\\"title container\\\">\\n        <h2>Einsatzart</h2>\\n      </div>\\n\\n      <div class=\\\"card-list container\\\">\\n        <!-- dont show this one once the employer got all his employees -->\\n        <div class=\\\"small-red-card pointer\\\" (click)=\\\"navigateApplications()\\\">\\n          <h2>Bewerbungen (<span>2</span>)</h2>\\n        </div>\\n        <!-- show this one only if the employer accepted at least one employee -->\\n        <div class=\\\"small-red-card pointer\\\" (click)=\\\"navigateConfirmedApplications()\\\">\\n          <h2>Zusagen (<span>2</span>)</h2>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"divider\\\"></div>\\n\\n      <div class=\\\"ad-info\\\">\\n        <!-- Where will the job be? -->\\n        <div class=\\\"address\\\">\\n          <p class=\\\"small-title container\\\">Wo? </p>\\n          <div class=\\\"list-items\\\">\\n            <div class=\\\"item-no-icon container\\\">\\n              <!-- <p>Musterstr. 10, 10000 Musterhausen {{data.location}}</p> -->\\n              <p>{{data.location}}</p>\\n\\n            </div>\\n          </div>\\n        </div>\\n\\n        <!-- show if the ad is set as same dates and continuous is not selected-->\\n        <div class=\\\"same-dates\\\" *ngIf=\\\"option1\\\">\\n          <!-- when will the job be? -->\\n          <div class=\\\"when\\\">\\n            <p class=\\\"small-title container\\\">Wann? </p>\\n            <div class=\\\"list-items\\\">\\n              <div class=\\\"item-no-icon container\\\">\\n                <!-- FORMAT: Am \\\"FIRST DATE\\\" - \\\"LAST DATE\\\" zwischen \\\"START TIME\\\" - \\\"END TIME\\\" Uhr -->\\n                <!-- <p>Am 01.01.19 - 02.01.19 zwischen 09.00 - 18.00 Uhr</p> -->\\n                <p>Am {{data.startDate}} - {{data.endDate}} zwischen {{data.startTime}} - {{data.endTime}} Uhr</p>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- show personal qualification needed -->\\n          <div class=\\\"who\\\">\\n            <p class=\\\"small-title container\\\">Wer?</p>\\n            <div class=\\\"list-items\\\">\\n              <!-- FORMAT: \\\"AMOUNT PERSONAL QUALIFICATION\\\" - \\\"DRIVING LICENSE\\\" - \\\"WAGE MONEY\\\" / \\\"If DAILY then Tag, if HOURLY then Stunde\\\" -->\\n              <div class=\\\"item-no-icon container\\\">\\n                <!-- <p>5 Sanitätshelfer - B1 - 100,00€/Tag</p> -->\\n                <p>{{data.qualification}} - {{data.drivingLinse}} - {{data.wage}}€/{{formatType}} </p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <!-- show if the ad is set as same dates and continuous is selected-->\\n        <div *ngIf=\\\"option2\\\" class=\\\"same-dates-continuous\\\">\\n          <!-- when will the job be? -->\\n          <div class=\\\"when\\\">\\n            <p class=\\\"small-title container\\\">Wann?</p>\\n            <div class=\\\"list-items\\\">\\n              <div class=\\\"item-no-icon container\\\">\\n                <!-- FORMAT: Am \\\"FIRST DATE\\\" um \\\"START TIME\\\" Uhr bis zum \\\"LAST DATE\\\" um \\\"END TIME\\\" Uhr -->\\n                <!-- <p>Am 01.01.19 um 09.00 Uhr bis zum 02.01.19 um 09.00 Uhr</p> -->\\n                <p>Am {{data.startDate}} um {{startTime}} Uhr bis zum {{endDate}} um {{data.endTime}} Uhr</p>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- show personal qualification needed -->\\n          <div class=\\\"who\\\">\\n            <p class=\\\"small-title container\\\">Wer?</p>\\n            <div class=\\\"list-items\\\">\\n              <!-- FORMAT: \\\"AMOUNT PERSONAL QUALIFICATION\\\" - \\\"DRIVING LICENSE\\\" - \\\"WAGE MONEY\\\" / \\\"If DAILY then Tag, if HOURLY then Stunde\\\" -->\\n              <div class=\\\"item-no-icon container\\\">\\n                <!-- <p>5 Sanitätshelfer - B1 - 100,00€/Tag</p> -->\\n                <p>{{data.qualification}} - {{data.drivingLinse}} - {{data.wage}}€</p>\\n                <!-- {{formatType}}  -->\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!-- show if the ad is set as different dates and continuous is not selected-->\\n        <div *ngIf=\\\"option3\\\" class=\\\"different-dates\\\">\\n          <div class=\\\"when-who\\\">\\n            <p class=\\\"small-title container\\\">Wann und wer?</p>\\n            <!-- Show for each date -->\\n            <div class=\\\"list-items\\\">\\n              <div class=\\\"item-no-icon container\\\">\\n                <!-- FORMAT: Am \\\"FIRST DATE\\\" zwischen \\\"START TIME\\\" - \\\"END TIME\\\" Uhr -->\\n                <!-- <p>Am 01.01.19 zwischen 09.00 - 18.00 Uhr</p> -->\\n                <p>Am {{data.startDate}} zwischen {{data.startTime}} {{data.endTime}} Uhr</p>\\n              </div>\\n\\n              <!-- FORMAT: \\\"AMOUNT PERSONAL QUALIFICATION\\\" - \\\"DRIVING LICENSE\\\" - \\\"WAGE MONEY\\\" / \\\"If DAILY then Tag, if HOURLY then Stunde\\\" -->\\n              <div class=\\\"item-no-icon container\\\">\\n                <!-- <p>5 Sanitätshelfer - B1 - 100,00€/Tag</p> -->\\n                <p>{{data.qualification}} - {{data.drivingLinse}} - {{data.wage}}€/{{formatType}} </p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVyL2Fkcy9hZC9hZC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { ApiService } from 'src/app/services/api.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-ad',\n  templateUrl: './ad.page.html',\n  styleUrls: ['./ad.page.scss'],\n})\nexport class AdPage implements OnInit {\n\n  data: any = {};\n  option1: boolean;\n  option2: boolean;\n  option3: boolean;\n  formatType: string;\n\n\n  constructor(private navController: NavController, private api: ApiService) { }\n\n  ngOnInit() {\n    this.data = JSON.parse(localStorage.getItem('AdData'));\n    console.log(this.data);\n    this.option1 = this.data.condition1;\n    // console.log(this.option1 + \" \" + this.option2 + \" \" + this.option3 + \" \")\n    this.option2 = this.data.condition2;\n    this.option3 = this.data.condition3\n    // for wage type daily or per hour\n    if (this.data.wageType == 'DAILY') {\n      this.formatType = 'Tag';\n      // console.log(\"wageFormat \" + this.formatType);\n    }\n    else {\n      this.formatType = 'Stunde';\n      // console.log(\"wageFormat \"+this.formatType);\n    }\n    \n    // if (this.data.requiredEmployees ) {\n      \n    // }\n\n\n  }\n\n  // <!-- dont show this one, =>  once the employer got all his employees -->\n  navigateApplications() {\n    this.navController.navigateForward(\"/employer/ads/ad/applications\");\n  }\n\n  // <!-- show this one only if the employer accepted at least one employee -->\n  navigateConfirmedApplications() {\n    this.navController.navigateForward(\"/employer/ads/ad/applications/confirmed\");\n  }\n\n}\n"],"sourceRoot":""}