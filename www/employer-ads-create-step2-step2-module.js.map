{"version":3,"sources":["webpack:///./src/app/employer/ads/create/step2/step2.module.ts","webpack:///./src/app/employer/ads/create/step2/step2.page.html","webpack:///./src/app/employer/ads/create/step2/step2.page.scss","webpack:///./src/app/employer/ads/create/step2/step2.page.ts"],"names":[],"mappings":"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","file":"employer-ads-create-step2-step2-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { Step2Page } from './step2.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Step2Page\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [Step2Page]\n})\nexport class Step2PageModule {}\n","module.exports = \"<ion-content>\\n  <div class=\\\"main\\\">\\n    <div class=\\\"header container\\\">\\n      <ion-back-button text=\\\"\\\" defaultHref=\\\"\\\" icon=\\\"arrow-round-back\\\"></ion-back-button>\\n    </div>\\n\\n    <div class=\\\"content\\\">\\n      <!-- show if dates same (option 1) is clicked and continuous checkbox is not selected -->\\n      <div *ngIf=\\\"option1;\\\" class=\\\" dates-same\\\">\\n\\n        <form [formGroup]=\\\"form\\\">\\n          <div class=\\\"title container\\\">\\n            <h2>Einsatz Template 1</h2>\\n          </div>\\n\\n          <ion-list>\\n            <div class=\\\"grid-2\\\">\\n              <!-- start time -->\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label position=\\\"stacked\\\">Startzeit </ion-label>\\n                <ion-datetime displayFormat=\\\"HH:mm\\\" formControlName=\\\"startTime\\\" cancelText=\\\"Abbrechen\\\"\\n                  doneText=\\\"Fertig\\\"></ion-datetime>\\n              </ion-item>\\n\\n              <!-- end time -->\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label position=\\\"stacked\\\">Endzeit</ion-label>\\n                <ion-datetime formControlName=\\\"endTime\\\" displayFormat=\\\"HH:mm\\\" cancelText=\\\"Abbrechen\\\" doneText=\\\"Fertig\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-list>\\n          <div class=\\\"employee-info\\\">\\n            <div class=\\\"title container\\\">\\n              <h3>Einsatzkraft</h3>\\n            </div>\\n            <ion-list>\\n              <div class=\\\"grid-2-l\\\">\\n                <!-- personal qualification -->\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label position=\\\"stacked\\\">Einsatzkraft</ion-label>\\n                  <ion-select formControlName=\\\"qualification\\\" cancelText=\\\"Abbrechen\\\" okText=\\\"Fertig\\\">\\n                    <ion-select-option value=\\\"SANITAETSHELFER\\\">Sanitätshelfer</ion-select-option>\\n                    <ion-select-option value=\\\"RETTUNGSHELFER\\\">Rettungshelfer</ion-select-option>\\n                    <ion-select-option value=\\\"RETTUNGSSANITAETER\\\">Rettungssanitäter</ion-select-option>\\n                    <ion-select-option value=\\\"RETTUNGSASSISTENT\\\">Rettungsassistent</ion-select-option>\\n                    <ion-select-option value=\\\"NOTFALLSANITAETER\\\">Notfallsanitäter</ion-select-option>\\n                    <ion-select-option value=\\\"ARZT\\\">Arzt</ion-select-option>\\n                    <ion-select-option value=\\\"ARZTRETTUNGSDIENST\\\">Arzt im Rettungsdienst</ion-select-option>\\n                  </ion-select>\\n                </ion-item>\\n\\n                <!-- how many of those employees -->\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label position=\\\"stacked\\\">Anzahl</ion-label>\\n                  <ion-input formControlName=\\\"requiredEmployees\\\" type=\\\"number\\\" clearInput></ion-input>\\n                </ion-item>\\n              </div>\\n\\n              <!-- wage -->\\n              <div class=\\\"grid-2-l\\\">\\n                <!-- money -->\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label position=\\\"stacked\\\">Honorar</ion-label>\\n                  <ion-input formControlName=\\\"wage\\\" type=\\\"number\\\" clearInput></ion-input>\\n                </ion-item>\\n\\n                <!-- money per day or per hour paid -->\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label position=\\\"stacked\\\">Tag/Std.</ion-label>\\n                  <ion-select formControlName=\\\"wageType\\\" cancelText=\\\"Abbrechen\\\" okText=\\\"Fertig\\\">\\n                    <ion-select-option value=\\\"HOURLY\\\">pro Stunde</ion-select-option>\\n                    <ion-select-option value=\\\"DAILY\\\">pro Tag</ion-select-option>\\n                  </ion-select>\\n                </ion-item>\\n              </div>\\n\\n              <!-- driving license -->\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label position=\\\"stacked\\\">Führerschein benötigt?</ion-label>\\n                <ion-select formControlName=\\\"drivingLicence\\\" cancelText=\\\"Abbrechen\\\" okText=\\\"Fertig\\\">\\n                  <ion-select-option value=\\\"NO\\\">Kein Führerschein</ion-select-option>\\n                  <ion-select-option value=\\\"BENEFICIAL\\\">Führerschein vorteilhaft</ion-select-option>\\n                  <ion-select-option value=\\\"B\\\">B</ion-select-option>\\n                  <ion-select-option value=\\\"B1\\\">B1</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n            </ion-list>\\n          </div>\\n\\n          <!-- create another \\\"employee-info\\\" just below the first one, the newly created one should have a remove icon so we can delete it if added by mistake -->\\n          <div class=\\\"add-new container pointer\\\" (click)=\\\"addField()\\\">\\n            <ion-icon name=\\\"add\\\"></ion-icon>\\n            <p>Weitere Einsatzkraft hinzufügen</p>\\n          </div>\\n\\n          <!-- create ad -->\\n          <div class=\\\"container\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <ion-button color=\\\"primary\\\" expand=\\\"block\\\" [disabled]=\\\"form.invalid || form.pristine\\\"\\n              (click)=\\\"submitForm(form)\\\">Jetzt Stelle erstellen\\n            </ion-button>\\n          </div>\\n\\n        </form>\\n      </div>\\n      <!-- show if dates same (Option 1) is clicked and continuous checkbox is selected -->\\n      <div *ngIf=\\\"option2;\\\" class=\\\" dates-same-continuous\\\">\\n\\n        <form [formGroup]=\\\"form\\\">\\n          <div class=\\\"title container\\\">\\n            <h2>Einsatz Template 2</h2>\\n          </div>\\n\\n          <ion-list>\\n            <div class=\\\"grid-2\\\">\\n              <!-- start time start date-->\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label position=\\\"stacked\\\">Startzeit FIRSTDATE </ion-label>\\n                <ion-datetime formControlName=\\\"startTime\\\" displayFormat=\\\"HH:mm\\\" cancelText=\\\"Abbrechen\\\"\\n                  doneText=\\\"Fertig\\\"></ion-datetime>\\n              </ion-item>\\n\\n              <!-- end time end date-->\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label position=\\\"stacked\\\">Endzeit LASTDATE</ion-label>\\n                <ion-datetime formControlName=\\\"endTime\\\" displayFormat=\\\"HH:mm\\\" cancelText=\\\"Abbrechen\\\" doneText=\\\"Fertig\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-list>\\n\\n          <div class=\\\"employee-info\\\">\\n            <div class=\\\"title container\\\">\\n              <h3>Einsatzkraft</h3>\\n            </div>\\n            <ion-list>\\n              <div class=\\\"grid-2-l\\\">\\n                <!-- personal qualification -->\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label position=\\\"stacked\\\">Einsatzkraft</ion-label>\\n                  <ion-select formControlName=\\\"qualification\\\" cancelText=\\\"Abbrechen\\\" okText=\\\"Fertig\\\">\\n                    <ion-select-option value=\\\"SANITAETSHELFER\\\">Sanitätshelfer</ion-select-option>\\n                    <ion-select-option value=\\\"RETTUNGSHELFER\\\">Rettungshelfer</ion-select-option>\\n                    <ion-select-option value=\\\"RETTUNGSSANITAETER\\\">Rettungssanitäter</ion-select-option>\\n                    <ion-select-option value=\\\"RETTUNGSASSISTENT\\\">Rettungsassistent</ion-select-option>\\n                    <ion-select-option value=\\\"NOTFALLSANITAETER\\\">Notfallsanitäter</ion-select-option>\\n                    <ion-select-option value=\\\"ARZT\\\">Arzt</ion-select-option>\\n                    <ion-select-option value=\\\"ARZTRETTUNGSDIENST\\\">Arzt im Rettungsdienst</ion-select-option>\\n                  </ion-select>\\n                </ion-item>\\n\\n                <!-- how many of those employees -->\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label position=\\\"stacked\\\">Anzahl</ion-label>\\n                  <ion-input formControlName=\\\"requiredEmployees\\\" type=\\\"number\\\" clearInput></ion-input>\\n                </ion-item>\\n              </div>\\n\\n              <!-- wage -->\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label position=\\\"stacked\\\">Honorar</ion-label>\\n                <ion-input formControlName=\\\"wage\\\" type=\\\"number\\\" clearInput></ion-input>\\n              </ion-item>\\n\\n              <!-- driving license -->\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label position=\\\"stacked\\\">Führerschein benötigt?</ion-label>\\n                <ion-select formControlName=\\\"drivingLicence\\\" cancelText=\\\"Abbrechen\\\" okText=\\\"Fertig\\\">\\n                  <ion-select-option value=\\\"NO\\\">Kein Führerschein</ion-select-option>\\n                  <ion-select-option value=\\\"BENEFICIAL\\\">Führerschein vorteilhaft</ion-select-option>\\n                  <ion-select-option value=\\\"B\\\">B</ion-select-option>\\n                  <ion-select-option value=\\\"B1\\\">B1</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n            </ion-list>\\n          </div>\\n\\n          <!-- create another \\\"employee-info\\\" just below the first one, the newly created one should have a remove icon so we can delete it if added by mistake -->\\n          <div class=\\\"add-new container\\\">\\n            <ion-icon name=\\\"add\\\"></ion-icon>\\n            <p>Weitere Einsatzkraft hinzufügen</p>\\n          </div>\\n\\n          <!-- create ad -->\\n          <div class=\\\"container\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <ion-button color=\\\"primary\\\" expand=\\\"block\\\" [disabled]=\\\"form.invalid || form.pristine\\\"\\n              (click)=\\\"submitForm(form)\\\">Jetzt Stelle erstellen\\n            </ion-button>\\n          </div>\\n\\n        </form>\\n      </div>\\n      <!-- show if dates different (Option 2) is clicked and continuous checkbox is not selected -->\\n      <div *ngIf=\\\"continousCheck\\\" class=\\\"dates-different\\\">\\n        <ion-slides>\\n          <!-- show for each date an own form/slide; in last slide the submit button will be to confirm, else it should just go to the next slide -->\\n          <ion-slide>\\n\\n            <form [formGroup]=\\\"form\\\">\\n              <div class=\\\"title container\\\">\\n                <h2>Einsatz Template 3</h2>\\n\\n                <!-- get data from last slide, if first slide then don't show -->\\n                <div class=\\\"add-new\\\">\\n                  <ion-icon name=\\\"add\\\"></ion-icon>\\n                  <p>Voherige Daten übernehmen </p>\\n                </div>\\n              </div>\\n\\n              <ion-list>\\n                <div class=\\\"grid-2\\\">\\n                  <!-- start time -->\\n                  <ion-item lines=\\\"none\\\">\\n                    <ion-label position=\\\"stacked\\\">Startzeit</ion-label>\\n                    <ion-datetime formControlName=\\\"startTime\\\" displayFormat=\\\"HH:mm\\\" cancelText=\\\"Abbrechen\\\"\\n                      doneText=\\\"Fertig\\\"></ion-datetime>\\n                  </ion-item>\\n\\n                  <!-- end time -->\\n                  <ion-item lines=\\\"none\\\">\\n                    <ion-label position=\\\"stacked\\\">Endzeit</ion-label>\\n                    <ion-datetime formControlName=\\\"endTime\\\" displayFormat=\\\"HH:mm\\\" cancelText=\\\"Abbrechen\\\"\\n                      doneText=\\\"Fertig\\\"></ion-datetime>\\n                  </ion-item>\\n                </div>\\n              </ion-list>\\n\\n              <div class=\\\"employee-info\\\">\\n                <div class=\\\"title container\\\">\\n                  <h3>Einsatzkraft</h3>\\n                </div>\\n\\n                <ion-list>\\n                  <div class=\\\"grid-2-l\\\">\\n                    <!-- personal qualfication-->\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label position=\\\"stacked\\\">Einsatzkraft</ion-label>\\n                      <ion-select formControlName=\\\"qualification\\\" cancelText=\\\"Abbrechen\\\" okText=\\\"Fertig\\\">\\n                        <ion-select-option value=\\\"SANITAETSHELFER\\\">Sanitätshelfer</ion-select-option>\\n                        <ion-select-option value=\\\"RETTUNGSHELFER\\\">Rettungshelfer</ion-select-option>\\n                        <ion-select-option value=\\\"RETTUNGSSANITAETER\\\">Rettungssanitäter</ion-select-option>\\n                        <ion-select-option value=\\\"RETTUNGSASSISTENT\\\">Rettungsassistent</ion-select-option>\\n                        <ion-select-option value=\\\"NOTFALLSANITAETER\\\">Notfallsanitäter</ion-select-option>\\n                        <ion-select-option value=\\\"ARZT\\\">Arzt</ion-select-option>\\n                        <ion-select-option value=\\\"ARZTRETTUNGSDIENST\\\">Arzt im Rettungsdienst</ion-select-option>\\n                      </ion-select>\\n                    </ion-item>\\n\\n                    <!-- how many of those employees -->\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label position=\\\"stacked\\\">Anzahl</ion-label>\\n                      <ion-input formControlName=\\\"requiredEmployees\\\" type=\\\"number\\\" clearInput></ion-input>\\n                    </ion-item>\\n                  </div>\\n\\n                  <!-- wage -->\\n                  <div class=\\\"grid-2-l\\\">\\n                    <!-- money -->\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label position=\\\"stacked\\\">Honorar</ion-label>\\n                      <ion-input formControlName=\\\"wage\\\" type=\\\"number\\\" clearInput></ion-input>\\n                    </ion-item>\\n\\n                    <!-- money per day or per hour paid -->\\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label position=\\\"stacked\\\">Tag/Std.</ion-label>\\n                      <ion-select formControlName=\\\"wageType\\\" cancelText=\\\"Abbrechen\\\" okText=\\\"Fertig\\\">\\n                        <ion-select-option value=\\\"HOURLY\\\">pro Stunde</ion-select-option>\\n                        <ion-select-option value=\\\"DAILY\\\">pro Tag</ion-select-option>\\n                      </ion-select>\\n                    </ion-item>\\n                  </div>\\n\\n                  <!-- driving license -->\\n                  <ion-item lines=\\\"none\\\">\\n                    <ion-label position=\\\"stacked\\\">Führerschein benötigt?</ion-label>\\n                    <ion-select formControlName=\\\"drivingLicence\\\" cancelText=\\\"Abbrechen\\\" okText=\\\"Fertig\\\">\\n                      <ion-select-option value=\\\"NO\\\">Kein Führerschein</ion-select-option>\\n                      <ion-select-option value=\\\"BENEFICIAL\\\">Führerschein vorteilhaft</ion-select-option>\\n                      <ion-select-option value=\\\"B\\\">B</ion-select-option>\\n                      <ion-select-option value=\\\"B1\\\">B1</ion-select-option>\\n                    </ion-select>\\n                  </ion-item>\\n                </ion-list>\\n              </div>\\n\\n              <!-- create another \\\"employee-info\\\" just below the first one, the newly created one should have a remove icon so we can delete it if added by mistake -->\\n              <div class=\\\"add-new container\\\">\\n                <ion-icon name=\\\"add\\\"></ion-icon>\\n                <p>Weitere Einsatzkraft hinzufügen</p>\\n              </div>\\n\\n              <!-- create ad -->\\n              <div class=\\\"container\\\">\\n                <div class=\\\"divider\\\"></div>\\n                <ion-button color=\\\"primary\\\" expand=\\\"block\\\" [disabled]=\\\"form.invalid || form.pristine\\\"\\n                  (click)=\\\"submitForm(form)\\\">Jetzt Stelle erstellen\\n                </ion-button>\\n              </div>\\n            </form>\\n          </ion-slide>\\n        </ion-slides>\\n      </div>\\n\\n    </div>\\n  </div>\\n</ion-content>\"","module.exports = \".add-new {\\n  display: grid;\\n  grid-template-columns: 20px auto;\\n  align-items: center; }\\n\\nion-slide {\\n  text-align: left; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW1wbG95ZXIvYWRzL2NyZWF0ZS9zdGVwMi9EOlxcS29kZUFscGhhXFxXb3Jrc3BhY2VcXFByb2plY3RzXFxEQUhNU1xcVGVzdFxcREFITVMgMS4wL3NyY1xcYXBwXFxlbXBsb3llclxcYWRzXFxjcmVhdGVcXHN0ZXAyXFxzdGVwMi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsZ0NBQWdDO0VBQ2hDLG1CQUFtQixFQUFBOztBQUdyQjtFQUFZLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZW1wbG95ZXIvYWRzL2NyZWF0ZS9zdGVwMi9zdGVwMi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWRkLW5ldyB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMjBweCBhdXRvO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG5pb24tc2xpZGUgeyB0ZXh0LWFsaWduOiBsZWZ0OyB9Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ApiService } from 'src/app/services/api.service';\nimport { HelperService } from 'src/app/services/helper.service';\n\n@Component({\n  selector: 'app-step2',\n  templateUrl: './step2.page.html',\n  styleUrls: ['./step2.page.scss'],\n})\nexport class Step2Page implements OnInit {\n\n  form: FormGroup;\n  data: any;\n  newField = [];\n  license: string;\n  continousCheck: boolean;\n  option1: boolean;\n  option2: boolean;\n  actionController: boolean;\n\n\n\n\n  constructor(private navController: NavController, private fb: FormBuilder, private api: ApiService, public helper: HelperService) { }\n\n  ngOnInit() {\n\n    // Retrieve the object from storage\n    this.data = JSON.parse(localStorage.getItem('AdsData'));\n    // console.log('retrievedObject: \\n', this.data);\n\n    this.actionController = JSON.parse(localStorage.getItem(\"actionController\"));\n    // console.log(typeof this.actionController);\n    // console.log(\"actionController check is \" + this.actionController);\n    // console.log(\"continuous Work is \" + this.data.continoueWork);\n\n    // checking conditions for showing proper template\n\n    // Template 1 will execute\n    if (this.actionController == true && (this.data.continoueWork == '' || this.data.continoueWork == false)) {\n      this.option1 = true;\n      this.option2 = false;\n      this.continousCheck = false;\n      // from builder\n      this.form = this.fb.group({\n        startTime: ['', Validators.required],\n        endTime: ['', Validators.required],\n        qualification: ['', Validators.required],\n        requiredEmployees: ['', Validators.required],\n        wage: ['', Validators.required],\n        wageType: ['', Validators.required],\n        drivingLicence: ['', Validators.required]\n      })\n      // localStorage.setItem('continousCheck', JSON.stringify(this.continousCheck));\n      // localStorage.setItem('option1', JSON.stringify(this.option1));\n      // localStorage.setItem('actionController', JSON.stringify(this.actionController));\n    }\n    // Tempate 2 will execute\n    else if (this.actionController == true && this.data.continoueWork == true) {\n      this.option1 = false;\n      this.option2 = true;\n      this.continousCheck = false;\n      // from builder\n      this.form = this.fb.group({\n        startTime: ['', Validators.required],\n        endTime: ['', Validators.required],\n        qualification: ['', Validators.required],\n        requiredEmployees: ['', Validators.required],\n        wage: ['', Validators.required],\n        // wageType: ['', Validators.required],\n        drivingLicence: ['', Validators.required]\n      })\n    }\n    // Template 3 will execute\n    else if (this.actionController == false && (this.data.continoueWork == '' || this.data.continoueWork == false)) {\n      this.option1 = false;\n      this.option2 = false;\n      this.continousCheck = true;\n      // from builder\n      this.form = this.fb.group({\n        startTime: ['', Validators.required],\n        endTime: ['', Validators.required],\n        qualification: ['', Validators.required],\n        requiredEmployees: ['', Validators.required],\n        wage: ['', Validators.required],\n        wageType: ['', Validators.required],\n        drivingLicence: ['', Validators.required]\n      })\n\n    }\n  }\n  /* ngOnInit end */\n\n  // Form Submit Method\n  submitForm(form: any) {\n    // submit method for template 1 and 3\n    if (this.option2 != true) {\n      // for condition 3\n      if (this.continousCheck === true) {\n        let record = {\n          jobTitle: this.data.jobTitle,\n          location: this.data.address,\n          startDate: this.data.startDate,\n          endDate: this.data.endDate,\n          fastReply: this.data.fastReply,\n\n          startTime: form.value.startTime,\n          endTime: form.value.endTime,\n          qualification: form.value.qualification,\n          requiredEmployees: form.value.requiredEmployees,\n          wage: form.value.wage,\n          wageType: form.value.wageType,\n          drivingLinse: form.value.drivingLicence,\n          uid: localStorage.getItem('uid'),\n          condition1: false,\n          condition2: false,\n          condition3: true\n        }\n        // console.log(record);\n        this.api.createAds(record)\n          .then(res => {\n            this.helper.presentToast('Ad Created Successfuliy!');\n            this.navController.navigateRoot(\"/employer/ads/create/step3\");\n          }, err => {\n            this.helper.presentToast(err.message + 'Error!');\n          });\n\n      } else {\n        //  for condition 1 \n        let record = {\n          jobTitle: this.data.jobTitle,\n          location: this.data.address,\n          startDate: this.data.startDate,\n          endDate: this.data.endDate,\n          fastReply: this.data.fastReply,\n\n          startTime: form.value.startTime,\n          endTime: form.value.endTime,\n          qualification: form.value.qualification,\n          requiredEmployees: form.value.requiredEmployees,\n          wage: form.value.wage,\n          wageType: form.value.wageType,\n          drivingLinse: form.value.drivingLicence,\n          uid: localStorage.getItem('uid'),\n          condition1: true,\n          condition2: false,\n          condition3: false\n          // drivingLicence: form.value.drivingLicence[0].text,\n          // licence: form.value.licence\n        }\n        // localStorage.setItem('option', JSON.stringify(false));\n        // console.log(record);\n        this.api.createAds(record)\n          .then(res => {\n            this.helper.presentToast(' Ad Created Successfuliy!');\n            this.navController.navigateRoot(\"/employer/ads/create/step3\");\n          }, err => {\n            this.helper.presentToast(err.message + 'Error!');\n          });\n      }\n\n    } else {\n      // for tempate 2\n      let record = {\n        jobTitle: this.data.jobTitle,\n        location: this.data.address,\n        startDate: this.data.startDate,\n        endDate: this.data.endDate,\n        fastReply: this.data.fastReply,\n\n        startTime: form.value.startTime,\n        endTime: form.value.endTime,\n        qualification: form.value.qualification,\n        requiredEmployees: form.value.requiredEmployees,\n        wage: form.value.wage,\n        drivingLinse: form.value.drivingLicence,\n        uid: localStorage.getItem('uid'),\n        condition1: false,\n        condition2: true,\n        condition3: false\n        // drivingLicence: form.value.drivingLicence[0].text,\n        // licence: form.value.licence\n      }\n      // localStorage.setItem('option', JSON.stringify(false));\n      // console.log(record);\n      this.api.createAds(record)\n        .then(res => {\n          this.helper.presentToast(' Ad Created Successfuliy!');\n          this.navController.navigateRoot(\"/employer/ads/create/step3\");\n        }, err => {\n          this.helper.presentToast(err.message + 'Error!');\n        });\n\n    }\n\n    // end Else Bloack\n  } // end SubmitForm method\n\n  // For adding new input field for employee\n  addField() {\n\n  }\n}\n"],"sourceRoot":""}